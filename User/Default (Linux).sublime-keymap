[
    { "keys": ["alt+k"], "command": "swap_line_up" },
    { "keys": ["alt+j"], "command": "swap_line_down" },
    { "keys": ["alt+shift+j"], "command": "select_lines", "args": {"forward": true} },
    { "keys": ["alt+shift+k"], "command": "select_lines", "args": {"forward": false} },
    { "keys": ["alt+/"], "command": "toggle_comment", "args": { "block": false } },
    { "keys": ["alt+shift+/"], "command": "toggle_comment", "args": { "block": true } },
    { "keys": ["alt+g"], "command": "goto_definition" },
    { "keys": ["alt+shift+s"], "command": "js_prettier" },
    { "keys": ["alt+p"], "command": "show_overlay", "args": {"overlay": "goto", "show_files": true} },
    { "keys": ["alt+s"], "command": "save" },
    { "keys": ["alt+w"], "command": "close" },
    { "keys": ["alt+q"], "command": "exit" },
    { "keys": ["ctrl+b"], "command": "toggle_side_bar" },

    { "keys": ["ctrl+shift+."], "command": "insert", "args": {"characters": "\t"} },
    { "keys": ["ctrl+shift+."], "command": "reindent", "context": [{ "key": "setting.auto_indent", "operator": "equal", "operand": true }, { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, { "key": "preceding_text", "operator": "regex_match", "operand": "^$", "match_all": true }, { "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true } ] },
    { "keys": ["ctrl+shift+."], "command": "indent", "context": [{ "key": "text", "operator": "regex_contains", "operand": "\n" }] },
    { "keys": ["ctrl+shift+."], "command": "move", "args": {"by": "lines", "forward": true}, "context": [{ "key": "overlay_has_focus", "operator": "equal", "operand": true  } ] },
    { "keys": ["ctrl+shift+."], "command": "next_field", "context": [{ "key": "has_next_field", "operator": "equal", "operand": true }] },

    { "keys": ["ctrl+shift+,"], "command": "insert", "args": {"characters": "\t"} },
    { "keys": ["ctrl+shift+,"], "command": "unindent", "context": [{ "key": "setting.shift_tab_unindent", "operator": "equal", "operand": true }] },
    { "keys": ["ctrl+shift+,"], "command": "unindent", "context": [{ "key": "preceding_text", "operator": "regex_match", "operand": "^[\t ]*" }] },
    { "keys": ["ctrl+shift+,"], "command": "unindent", "context": [{ "key": "text", "operator": "regex_contains", "operand": "\n" }] },
    { "keys": ["ctrl+shift+,"], "command": "move", "args": {"by": "lines", "forward": false}, "context": [{ "key": "overlay_visible", "operator": "equal", "operand": true }] },
    { "keys": ["ctrl+shift+,"], "command": "prev_field", "context": [{ "key": "has_prev_field", "operator": "equal", "operand": true }] },

    // php companion
    { "keys": ["alt+shift+i"], "command": "expand_fqcn", "args": {"leading_separator": true} },
    { "keys": ["alt+i"], "command": "find_use" },

    // vintage
    { "keys": ["ctrl+d"], "command": "find_under_expand" },
    { "keys": ["ctrl+z"], "command": "undo" },
    { "keys": ["ctrl+shift+z"], "command": "redo" },
    { "keys": ["alt+o"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line.sublime-macro"}, "context": [{ "key": "overlay_has_focus", "operator": "equal", "operand": false } ] },
    { "keys": ["backspace"], "command": "left_delete" },
    { "keys": ["delete"], "command": "right_delete" },
    { "keys": ["alt+d"], "command": "right_delete" },
    { "keys": ["escape"], "command": "exit_insert_mode", "context": [{ "key": "setting.command_mode", "operand": false }, { "key": "setting.is_widget", "operand": false } ] },
    { "keys": ["x"], "command": "enter_visual_line_mode", "context": [{"key": "setting.command_mode"}] },
    { "keys": ["j", "k"], "command": "exit_insert_mode", "context": [{ "key": "setting.command_mode", "operand": false }, { "key": "setting.is_widget", "operand": false } ] },
    {
        "keys": ["U"], "command": "redo",
        "context": [{"key": "setting.command_mode"}, {"key": "setting.vintage_ctrl_keys"}]
    },
    { "keys": ["alt+shift+r"], "command": "multicommand", "args": {
        "commands": [
            {"command": "right_delete"},
            {"command": "vi_paste_right"}
        ]
    } },

    // phpunit
    { "keys": ["alt+t"], "command": "phpunit_test_suite"},
    { "keys": ["alt+f"], "command": "phpunit_test_file" },
    { "keys": ["alt+n"], "command": "phpunit_test_nearest" },
    { "keys": ["alt+l"], "command": "phpunit_test_last" },

    // lsp
    { "keys": ["alt+g"], "command": "lsp_symbol_definition", "args": {"side_by_side": false, "force_group": true, "fallback": false, "group": -1}, "context": [{"key": "lsp.session_with_capability", "operand": "definitionProvider"}, {"key": "auto_complete_visible", "operand": false} ] },
    { "keys": ["alt+r"], "command": "lsp_symbol_references", "args": {"side_by_side": false, "force_group": true, "fallback": false, "group": -1}, "context": [{"key": "lsp.session_with_capability", "operand": "referencesProvider"}] },
    { "keys": ["alt+shift+r"], "command": "lsp_symbol_rename", "context": [{"key": "lsp.session_with_capability", "operand": "renameProvider"}] },
    { "keys": ["alt+e"], "command": "lsp_hover", "context": [{"key": "lsp.session_with_capability", "operand": "hoverProvider"}] },
    { "keys": ["alt+s"], "command": "lsp_save", "context": [{"key": "lsp.session_with_capability", "operand": "textDocumentSync.willSave | textDocumentSync.willSaveWaitUntil | codeActionProvider.codeActionKinds | documentFormattingProvider | documentRangeFormattingProvider"}] },

    // { "keys": ["ctrl+alt+t"], "command": "terminus_open"},
]



