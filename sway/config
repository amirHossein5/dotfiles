default_border pixel

# Default config for sway

### Variables
#
# Logo key. Use Mod1 for Alt.
set $alt Mod1
set $super Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | xargs swaymsg exec --

include /etc/sway/config-vars.d/*

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg wallpaper.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "type:touchpad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $alt+Return exec $term

    # Kill focused window
    bindsym --to-code $super+Shift+q kill

    # Start your launcher
    bindsym --to-code $super+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $super normal

    # Reload the configuration file
    bindsym --to-code $super+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym --to-code $super+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

    bindsym $super+Escape exec swaylock

    bindsym XF86MonBrightnessUp exec brightnessctl set +5% && pkill -RTMIN+9 i3blocks
    bindsym XF86MonBrightnessdown exec brightnessctl set 5%- && pkill -RTMIN+9 i3blocks

#
# Moving around:
#
    # Move your focus around
    bindsym --to-code $super+$left focus left
    bindsym --to-code $super+$down focus down
    bindsym --to-code $super+$up focus up
    bindsym --to-code $super+$right focus right

    # Move t--to-code he focused window with the same, but add Shift
    bindsym --to-code $super+Shift+$left move left
    bindsym --to-code $super+Shift+$down move down
    bindsym --to-code $super+Shift+$up move up
    bindsym --to-code $super+Shift+$right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym --to-code $alt+1 workspace number 1
    bindsym --to-code $alt+2 workspace number 2
    bindsym --to-code $alt+3 workspace number 3
    bindsym --to-code $alt+4 workspace number 4
    bindsym --to-code $alt+5 workspace number 5
    bindsym --to-code $alt+6 workspace number 6
    bindsym --to-code $alt+7 workspace number 7
    bindsym --to-code $alt+8 workspace number 8
    bindsym --to-code $alt+9 workspace number 9
    bindsym --to-code $alt+0 workspace number 10
    # Move focused container to workspace
    bindsym --to-code $alt+Shift+1 move container to workspace number 1
    bindsym --to-code $alt+Shift+2 move container to workspace number 2
    bindsym --to-code $alt+Shift+3 move container to workspace number 3
    bindsym --to-code $alt+Shift+4 move container to workspace number 4
    bindsym --to-code $alt+Shift+5 move container to workspace number 5
    bindsym --to-code $alt+Shift+6 move container to workspace number 6
    bindsym --to-code $alt+Shift+7 move container to workspace number 7
    bindsym --to-code $alt+Shift+8 move container to workspace number 8
    bindsym --to-code $alt+Shift+9 move container to workspace number 9
    bindsym --to-code $alt+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    bindsym --to-code Ctrl+$alt+o workspace back_and_forth
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym --to-code $super+b splith
    bindsym --to-code $super+v splitv

    # Switch the current container between different layout styles
    bindsym --to-code $super+s layout stacking
    bindsym --to-code $super+w layout tabbed
    bindsym --to-code $super+e layout toggle split

    # Make the current focus fullscreen
    bindsym --to-code $super+f fullscreen
    bindsym --to-code $super+x bar mode toggle

    # Toggle the current focus between tiling and floating mode
    bindsym --to-code $super+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym --to-code $super+space focus mode_toggle

    # Move focus to the parent container
    bindsym --to-code $super+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym --to-code $super+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym --to-code $super+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym --to-code $left resize shrink width 10px
    bindsym --to-code $down resize grow height 10px
    bindsym --to-code $up resize shrink height 10px
    bindsym --to-code $right resize grow width 10px

    # Return to default mode
    bindsym --to-code Return mode "default"
    bindsym --to-code Escape mode "default"
}
bindsym --to-code $super+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position bottom

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command i3blocks

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

input * {
    xkb_layout us,ir
    xkb_switch_layout us
    xkb_numlock enabled
}

bindsym --to-code --locked $super+ctrl+space exec swaymsg -t get_inputs -r | jq '[.[] | select(.type == "keyboard") | .xkb_active_layout_index][0] - 1 | fabs' | xargs swaymsg 'input type:keyboard xkb_switch_layout'

bindsym --to-code Ctrl+Up exec "amixer -q -D pulse sset Master 5%+ && pkill -RTMIN+10 i3blocks"
bindsym --to-code Ctrl+Down exec "amixer -q -D pulse sset Master 5%- && pkill -RTMIN+10 i3blocks"
bindsym --to-code Ctrl+Shift+Down exec "amixer -q -D pulse sset Master toggle && pkill -RTMIN+10 i3blocks"

bindsym XF86AudioRaiseVolume exec amixer -q -D pulse sset Master 5%+ && pkill -RTMIN+10 i3blocks
bindsym XF86AudioLowerVolume exec amixer -q -D pulse sset Master 5%- && pkill -RTMIN+10 i3blocks
bindsym XF86AudioMute exec amixer -q -D pulse sset Master toggle && pkill -RTMIN+10 i3blocks

bindsym --to-code {
    Print       exec grimshot --notify save output
    Alt+Print   exec grimshot --notify save active
    Ctrl+Print  exec grimshot --notify save area

    Shift+Print       exec grimshot --notify copy output
    Alt+Shift+Print   exec grimshot --notify copy active
    Ctrl+Shift+Print  exec grimshot --notify copy area
}

bindsym --to-code $super+period exec makoctl dismiss

exec mako
include /etc/sway/config.d/*
